plugins {
  id 'java-library'
  id 'maven-publish'
  id("io.papermc.paperweight.userdev")
  id("xyz.jpenilla.run-paper")
  id('com.github.johnrengelman.shadow')
}

group = "de.timesnake"
version = '3.0.5'
var projectId = 42

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url 'https://papermc.io/repo/repository/maven-public/'
  }
  maven {
    url "https://git.timesnake.de/api/v4/groups/7/-/packages/maven"
    name "TimeSnake"
    credentials {
      username = timesnakeUser
      password = timesnakePassword
    }
  }
}

dependencies {
  implementation "de.timesnake:channel-api:3.0.5"
  compileOnly "de.timesnake:library-basic:1.2.2"
  compileOnly "de.timesnake:library-chat:1.1"

  compileOnly 'org.jetbrains:annotations:23.0.0'

  compileOnly "com.moandjiezana.toml:toml4j:0.7.3-SNAPSHOT"

  paperweight.paperDevBundle("1.20.1-R0.1-SNAPSHOT")
}

configurations.configureEach {
  resolutionStrategy.dependencySubstitution {
    substitute module("de.timesnake:channel-api") using project(":channel-api")
    substitute module("de.timesnake:library-basic") using project(":library-basic")
    substitute module("de.timesnake:library-chat") using project(":library-chat")
  }
}


tasks {
  assemble {
    dependsOn(reobfJar)
  }

  compileJava {
    options.encoding = "UTF-8"
    options.release.set(17)
  }

  javadoc {
    options.encoding = "UTF-8"
  }

  processResources {
    filteringCharset = "UTF-8"
    var props = [
        "name"      : project.name,
        "version"   : project.version,
        "apiVersion": "1.20.1"
    ]
    inputs.properties(props)
    filesMatching("plugin.yml") {
      expand(props)
    }
  }

  reobfJar {
    outputJar.set(layout.buildDirectory.file("${timesnakePluginDir}/${project.name}-${project.version}.jar"))
  }
}

publishing {
  repositories {
    maven {
      url "https://git.timesnake.de/api/v4/projects/" + projectId + "/packages/maven"
      credentials(HttpHeaderCredentials) {
        name = "Job-Token"
        value = System.getenv("CI_JOB_TOKEN")
      }
      authentication {
        header(HttpHeaderAuthentication)
      }
    }
  }

  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
}